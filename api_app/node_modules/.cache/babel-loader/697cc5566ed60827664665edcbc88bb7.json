{"ast":null,"code":"var _jsxFileName = \"A:\\\\Work\\\\PersonalDevelopment\\\\03 {React API}\\\\api_app\\\\src\\\\pages\\\\page.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\n//import { useMyQueryQuery } from '../utils/__generated__/graphql'\n\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyQuery = gql`\n  query MyQuery {\n    test {\n      ID\n      password\n      username\n    }\n  }\n`;\nfunction DisplayTest() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(MyQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  return data.locations.map(_ref => {\n    let {\n      ID,\n      password,\n      username\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"About this location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n  });\n}\n_s(DisplayTest, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = DisplayTest;\nexport const Page = () => {\n  _s2();\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(MyQuery);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"not poo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), JSON.stringify(data), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"after poo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s2(Page, \"4k2moIvLDw2nUBcLPAvnagsOU6g=\", false, function () {\n  return [useQuery];\n});\n_c2 = Page;\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplayTest\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"names":["React","useQuery","gql","MyQuery","DisplayTest","loading","error","data","locations","map","ID","password","username","Page","JSON","stringify"],"sources":["A:/Work/PersonalDevelopment/03 {React API}/api_app/src/pages/page.tsx"],"sourcesContent":["import React from 'react'\r\n//import { useMyQueryQuery } from '../utils/__generated__/graphql'\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nimport { useQuery, gql} from '@apollo/client';\r\n\r\nconst MyQuery = gql`\r\n  query MyQuery {\r\n    test {\r\n      ID\r\n      password\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nfunction DisplayTest(){\r\n  const { loading, error, data } = useQuery(MyQuery);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return data.locations.map(({ ID, password, username}:{ID: number,password: string, username: string}) => (\r\n    <div key={ID}>\r\n      <h3>{username}</h3>\r\n      <br />\r\n      <b>About this location:</b>\r\n      <p>{password}</p>\r\n      <br />\r\n    </div>\r\n  ));\r\n}\r\nexport const Page = () => {\r\n  const {loading, data, error} = useQuery(MyQuery);\r\n\r\n  return <div>\r\n    <h2>not poo</h2>\r\n    {JSON.stringify(data)}\r\n    <h3>after poo</h3>\r\n  </div>\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAGA,SAASC,QAAQ,EAAEC,GAAG,QAAO,gBAAgB;AAAC;AAE9C,MAAMC,OAAO,GAAGD,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASE,WAAW,GAAE;EAAA;EACpB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGN,QAAQ,CAACE,OAAO,CAAC;EAElD,IAAIE,OAAO,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;EACrC,IAAIC,KAAK,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAe;EAEjC,OAAOC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC;IAAA,IAAC;MAAEC,EAAE;MAAEC,QAAQ;MAAEC;IAAwD,CAAC;IAAA,oBAClG;MAAA,wBACE;QAAA,UAAKA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnB;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA2B,eAC3B;QAAA,UAAID;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACjB;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,GALED,EAAE;MAAA;MAAA;MAAA;IAAA,QAMN;EAAA,CACP,CAAC;AACJ;AAAC,GAfQN,WAAW;EAAA,QACeH,QAAQ;AAAA;AAAA,KADlCG,WAAW;AAgBpB,OAAO,MAAMS,IAAI,GAAG,MAAM;EAAA;EACxB,MAAM;IAACR,OAAO;IAAEE,IAAI;IAAED;EAAK,CAAC,GAAGL,QAAQ,CAACE,OAAO,CAAC;EAEhD,oBAAO;IAAA,wBACL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,EACfW,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,eACrB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AACR,CAAC;AAAA,IARYM,IAAI;EAAA,QACgBZ,QAAQ;AAAA;AAAA,MAD5BY,IAAI;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}