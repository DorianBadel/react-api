{"ast":null,"code":"var _jsxFileName = \"A:\\\\Work\\\\PersonalDevelopment\\\\03 {React API}\\\\api_app\\\\src\\\\Pages\\\\Login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MainBody from '../../components/MainBody';\nimport { useState, useContext } from 'react';\nimport { AuthContext } from \"../../api/context/authContext\";\nimport { useForm } from \"../../assets/hooks\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from 'graphql-tag';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN_USER = gql`\n    mutation login(\n      $loginInput: LoginInput\n    ) {\n      loginUser(\n        loginInput: $loginInput\n      ){\n        username\n      }\n    }\n`;\nfunction Login() {\n  _s();\n  let navigate = useNavigate();\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState([]);\n  function loginUserCallback() {\n    loginUser();\n  }\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    update(proxy, _ref) {\n      let {\n        data: {\n          loginUser: userData\n        }\n      } = _ref;\n      context.login(userData);\n      navigate('/');\n    },\n    onError(_ref2) {\n      let {\n        graphQLErrors\n      } = _ref2;\n      //setErrors(graphQLErrors);\n      console.log(\"oops\");\n    },\n    variables: {\n      loginInput: values\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MainBody, {\n    children: [\"Login\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ja sam login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"kxDvbkNACllhp4zWdMvopEGYOoI=\", false, function () {\n  return [useNavigate, useForm, useMutation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","MainBody","useState","useContext","AuthContext","useForm","useMutation","gql","useNavigate","LOGIN_USER","Login","navigate","context","errors","setErrors","loginUserCallback","loginUser","onChange","onSubmit","values","username","password","loading","update","proxy","data","userData","login","onError","graphQLErrors","console","log","variables","loginInput"],"sources":["A:/Work/PersonalDevelopment/03 {React API}/api_app/src/Pages/Login/Login.tsx"],"sourcesContent":["import React from 'react'\r\nimport MainBody from '../../components/MainBody'\r\nimport {useState, useContext} from 'react'\r\nimport { AuthContext } from \"../../api/context/authContext\";\r\nimport {useForm } from \"../../assets/hooks\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { gql } from 'graphql-tag';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { TextField, Button, Container, Stack, Alert } from \"@mui/material\";\r\n\r\nconst LOGIN_USER = gql`\r\n    mutation login(\r\n      $loginInput: LoginInput\r\n    ) {\r\n      loginUser(\r\n        loginInput: $loginInput\r\n      ){\r\n        username\r\n      }\r\n    }\r\n`\r\n\r\nfunction Login() {\r\n  let navigate = useNavigate();\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  function loginUserCallback(){\r\n    loginUser();\r\n  }\r\n\r\n  const {onChange, onSubmit, values } = useForm(\r\n    loginUserCallback, {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  );\r\n\r\n  const [loginUser, {loading}] = useMutation(LOGIN_USER, {\r\n    update(proxy, { data: { loginUser: userData}}) {\r\n      context.login(userData);\r\n      navigate('/');\r\n    },\r\n    onError({ graphQLErrors }) {\r\n      //setErrors(graphQLErrors);\r\n      console.log(\"oops\");\r\n    },\r\n    variables: {\r\n      loginInput: values\r\n    }\r\n  })\r\n  return (\r\n    <MainBody>\r\n      Login\r\n      <p>Ja sam login</p>\r\n\r\n    </MainBody>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAAQC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAC1C,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAAQC,OAAO,QAAQ,oBAAoB;AAC3C,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,SAASC,GAAG,QAAQ,aAAa;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAI/C,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASG,KAAK,GAAG;EAAA;EACf,IAAIC,QAAQ,GAAGH,WAAW,EAAE;EAC5B,MAAMI,OAAO,GAAGT,UAAU,CAACC,WAAW,CAAC;EACvC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASa,iBAAiB,GAAE;IAC1BC,SAAS,EAAE;EACb;EAEA,MAAM;IAACC,QAAQ;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGd,OAAO,CAC3CU,iBAAiB,EAAE;IACjBK,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,MAAM,CAACL,SAAS,EAAE;IAACM;EAAO,CAAC,CAAC,GAAGhB,WAAW,CAACG,UAAU,EAAE;IACrDc,MAAM,CAACC,KAAK,QAAmC;MAAA,IAAjC;QAAEC,IAAI,EAAE;UAAET,SAAS,EAAEU;QAAQ;MAAC,CAAC;MAC3Cd,OAAO,CAACe,KAAK,CAACD,QAAQ,CAAC;MACvBf,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC;IACDiB,OAAO,QAAoB;MAAA,IAAnB;QAAEC;MAAc,CAAC;MACvB;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACrB,CAAC;IACDC,SAAS,EAAE;MACTC,UAAU,EAAEd;IACd;EACF,CAAC,CAAC;EACF,oBACE,QAAC,QAAQ;IAAA,iCAEP;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEV;AAEf;AAAC,GApCQT,KAAK;EAAA,QACGF,WAAW,EAQYH,OAAO,EAOdC,WAAW;AAAA;AAAA,KAhBnCI,KAAK;AAsCd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}