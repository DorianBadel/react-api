{"ast":null,"code":"var _jsxFileName = \"A:\\\\Work\\\\PersonalDevelopment\\\\03 {React API}\\\\api_app\\\\src\\\\components\\\\FriendsSection.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { ListOfFriends } from \"../api/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendsSection(_ref) {\n  _s();\n  let {\n    ID\n  } = _ref;\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(ListOfFriends(ID));\n  const td = new Date();\n  const today = td.getFullYear() + \"-\" + (td.getMonth() + 1) + \"-\" + td.getDate();\n  function getYear(id) {\n    //Return actual year from DB\n    if (!loading) console.log(data.friends.find(ID));\n    return \"2222\";\n  }\n  function compare(dateOne, dateTwo) {\n    const t1 = dateOne.split(\"-\");\n    const t2 = dateTwo.split(\"-\");\n    if (t2[1] > t1[1]) {\n      return true;\n    } else if (t2[1] === t1[1]) {\n      if (t2[2] >= t1[2]) return true;else return false;\n    }\n    return false;\n  }\n  function replace(passed, fr) {\n    let newDate = \"0000-0-0\";\n    const temp = fr.friend.date_of_birth.split(\"-\");\n    if (passed) {\n      newDate = td.getFullYear() + \"-\" + temp[1] + \"-\" + temp[2];\n    } else newDate = td.getFullYear() + 1 + \"-\" + temp[1] + \"-\" + temp[2];\n    const newFriend = {\n      Nickname: fr.Nickname,\n      friend: {\n        ID: fr.friend.ID,\n        Username: fr.friend.Username,\n        date_of_birth: newDate\n      }\n    };\n    return newFriend;\n  }\n  function compareWithYear(dateOne, dateTwo) {\n    const t1 = dateOne.split(\"-\");\n    const t2 = dateTwo.split(\"-\");\n    if (t2[0] > t1[0]) return true;else if (t2[0] === t1[0]) if (t2[1] > t1[1]) {\n      return true;\n    } else if (t2[1] === t1[1]) {\n      if (t2[2] >= t1[2]) return true;else return false;\n    }\n    return false;\n  }\n  function SortDates() {\n    let newDates = [];\n    if (!loading) {\n      data.firends.map(fr => {\n        newDates.push(replace(compare(today, fr.friend.date_of_birth), fr));\n      });\n      newDates.sort((a, b) => {\n        if (compareWithYear(a.friend.date_of_birth, b.friend.date_of_birth)) return -1;else return 1;\n      });\n    }\n    return newDates;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Friends ... \", today.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: \" ERROR \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this) : SortDates().map(fr => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [fr.Nickname ? fr.Nickname : fr.friend.Username, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getYear(fr.friend.ID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, fr.friend.ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n_s(FriendsSection, \"p6oyfP/Yk4ZuNTXZyHZn/tpJfv0=\", false, function () {\n  return [useQuery];\n});\n_c = FriendsSection;\nexport default FriendsSection;\nvar _c;\n$RefreshReg$(_c, \"FriendsSection\");","map":{"version":3,"names":["useQuery","React","ListOfFriends","FriendsSection","ID","loading","data","error","td","Date","today","getFullYear","getMonth","getDate","getYear","id","console","log","friends","find","compare","dateOne","dateTwo","t1","split","t2","replace","passed","fr","newDate","temp","friend","date_of_birth","newFriend","Nickname","Username","compareWithYear","SortDates","newDates","firends","map","push","sort","a","b","toString"],"sources":["A:/Work/PersonalDevelopment/03 {React API}/api_app/src/components/FriendsSection.tsx"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { ListOfFriends, ThisUser } from \"../api/queries\";\r\n\r\ntype Friend = {\r\n\tNickname: string;\r\n\tfriend: {\r\n\t\tID: number;\r\n\t\tUsername: string;\r\n\t\tdate_of_birth: string;\r\n\t};\r\n};\r\n\r\nfunction FriendsSection({ ID }: { ID: number }) {\r\n\tconst { loading, data, error } = useQuery(ListOfFriends(ID));\r\n\r\n\tconst td = new Date();\r\n\tconst today =\r\n\t\ttd.getFullYear() + \"-\" + (td.getMonth() + 1) + \"-\" + td.getDate();\r\n\r\n\tfunction getYear(id: number): string {\r\n\t\t//Return actual year from DB\r\n\t\tif (!loading) console.log(data.friends.find(ID));\r\n\r\n\t\treturn \"2222\";\r\n\t}\r\n\r\n\tfunction compare(dateOne: string, dateTwo: string): boolean {\r\n\t\tconst t1: string[] = dateOne.split(\"-\");\r\n\t\tconst t2: string[] = dateTwo.split(\"-\");\r\n\r\n\t\tif (t2[1] > t1[1]) {\r\n\t\t\treturn true;\r\n\t\t} else if (t2[1] === t1[1]) {\r\n\t\t\tif (t2[2] >= t1[2]) return true;\r\n\t\t\telse return false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction replace(passed: boolean, fr: Friend): Friend {\r\n\t\tlet newDate = \"0000-0-0\";\r\n\t\tconst temp: string[] = fr.friend.date_of_birth.split(\"-\");\r\n\t\tif (passed) {\r\n\t\t\tnewDate = td.getFullYear() + \"-\" + temp[1] + \"-\" + temp[2];\r\n\t\t} else newDate = td.getFullYear() + 1 + \"-\" + temp[1] + \"-\" + temp[2];\r\n\r\n\t\tconst newFriend: Friend = {\r\n\t\t\tNickname: fr.Nickname,\r\n\t\t\tfriend: {\r\n\t\t\t\tID: fr.friend.ID,\r\n\t\t\t\tUsername: fr.friend.Username,\r\n\t\t\t\tdate_of_birth: newDate,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn newFriend;\r\n\t}\r\n\r\n\tfunction compareWithYear(dateOne: string, dateTwo: string): boolean {\r\n\t\tconst t1: string[] = dateOne.split(\"-\");\r\n\t\tconst t2: string[] = dateTwo.split(\"-\");\r\n\r\n\t\tif (t2[0] > t1[0]) return true;\r\n\t\telse if (t2[0] === t1[0])\r\n\t\t\tif (t2[1] > t1[1]) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (t2[1] === t1[1]) {\r\n\t\t\t\tif (t2[2] >= t1[2]) return true;\r\n\t\t\t\telse return false;\r\n\t\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction SortDates() {\r\n\t\tlet newDates: Friend[] = [];\r\n\t\tif (!loading) {\r\n\t\t\tdata.firends.map((fr: Friend) => {\r\n\t\t\t\tnewDates.push(replace(compare(today, fr.friend.date_of_birth), fr));\r\n\t\t\t});\r\n\r\n\t\t\tnewDates.sort((a: Friend, b: Friend) => {\r\n\t\t\t\tif (compareWithYear(a.friend.date_of_birth, b.friend.date_of_birth))\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\telse return 1;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn newDates;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Friends ... {today.toString()}</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<p>loading...</p>\r\n\t\t\t) : error ? (\r\n\t\t\t\t<span className=\"error\"> ERROR </span>\r\n\t\t\t) : (\r\n\t\t\t\tSortDates().map((fr: Friend) => (\r\n\t\t\t\t\t<div key={fr.friend.ID}>\r\n\t\t\t\t\t\t{fr.Nickname ? fr.Nickname : fr.friend.Username}\r\n\t\t\t\t\t\t<p>{getYear(fr.friend.ID)}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FriendsSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}