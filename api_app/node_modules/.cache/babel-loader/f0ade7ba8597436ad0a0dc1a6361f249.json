{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const TestQuery = gql`\n\tquery MyQuery {\n\t\ttest {\n\t\t\tID\n\t\t\tpassword\n\t\t\tusername\n\t\t}\n\t}\n`;\nexport function ThisUser(id) {\n  const ThisUserQuery = gql`\n    query GetUsername {\n      u\n      ser(where: {ID: {_eq: ${id}}}) {\n        Username\n      }\n    }\n  `;\n  return ThisUserQuery;\n}\n_c = ThisUser;\nexport function ListOfFriends(id) {\n  const LOFQuery = gql`\n    query GetFL($uid: Int = ${id}) {\n      firends(where: {UID: {_eq: $uid}}) {\n        Nickname\n        friend {\n          ID\n          Username\n          date_of_birth\n        }\n      }\n    }\n  `;\n  return LOFQuery;\n}\n_c2 = ListOfFriends;\nexport const RegisterInput = gql`\n\tinput RegisterInput {\n\t\tusername: String\n\t\tpassword: String\n\t\tconfirmationPassword: String\n\t}\n`;\nexport const LoginInput = gql`\n\tinput LoginInput {\n\t\tusername: String\n\t\tpassword: String\n\t}\n`;\nexport const Mutus = gql`\n\ttype Mutation {\n\t\tregisterUser(registerInput: RegisterInput): User\n\t\tloginUser(loginInput: LoginInput): User\n\t}\n`;\nexport const Brutus = gql`\n\ttype Query {\n\t\tuser(id: ID!): User\n\t}\n`;\n{\n  /*\r\n  \n  https://dev-srckxtyodcjv1xtb.us.auth0.com/authorize?response_type=token&scope=openid%20profile&client_id=eDfMAnTOSV78xBmv8FXRpbiKJ06MCb4j&redirect_uri=http://localhost:3000&connection=Username-Password-Authentication\r\n  */\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"ThisUser\");\n$RefreshReg$(_c2, \"ListOfFriends\");","map":{"version":3,"names":["gql","TestQuery","ThisUser","id","ThisUserQuery","ListOfFriends","LOFQuery","RegisterInput","LoginInput","Mutus","Brutus"],"sources":["A:/Work/PersonalDevelopment/03 {React API}/api_app/src/api/queries.tsx"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const TestQuery = gql`\r\n\tquery MyQuery {\r\n\t\ttest {\r\n\t\t\tID\r\n\t\t\tpassword\r\n\t\t\tusername\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport function ThisUser(id: number) {\r\n\tconst ThisUserQuery = gql`\r\n    query GetUsername {\r\n      u\r\n      ser(where: {ID: {_eq: ${id}}}) {\r\n        Username\r\n      }\r\n    }\r\n  `;\r\n\treturn ThisUserQuery;\r\n}\r\n\r\nexport function ListOfFriends(id: number) {\r\n\tconst LOFQuery = gql`\r\n    query GetFL($uid: Int = ${id}) {\r\n      firends(where: {UID: {_eq: $uid}}) {\r\n        Nickname\r\n        friend {\r\n          ID\r\n          Username\r\n          date_of_birth\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n\treturn LOFQuery;\r\n}\r\n\r\nexport const RegisterInput = gql`\r\n\tinput RegisterInput {\r\n\t\tusername: String\r\n\t\tpassword: String\r\n\t\tconfirmationPassword: String\r\n\t}\r\n`;\r\n\r\nexport const LoginInput = gql`\r\n\tinput LoginInput {\r\n\t\tusername: String\r\n\t\tpassword: String\r\n\t}\r\n`;\r\n\r\nexport const Mutus = gql`\r\n\ttype Mutation {\r\n\t\tregisterUser(registerInput: RegisterInput): User\r\n\t\tloginUser(loginInput: LoginInput): User\r\n\t}\r\n`;\r\n\r\nexport const Brutus = gql`\r\n\ttype Query {\r\n\t\tuser(id: ID!): User\r\n\t}\r\n`;\r\n{\r\n\t/*\r\n\r\nhttps://dev-srckxtyodcjv1xtb.us.auth0.com/authorize?response_type=token&scope=openid%20profile&client_id=eDfMAnTOSV78xBmv8FXRpbiKJ06MCb4j&redirect_uri=http://localhost:3000&connection=Username-Password-Authentication\r\n*/\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,SAAS,GAAGD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,SAASE,QAAQ,CAACC,EAAU,EAAE;EACpC,MAAMC,aAAa,GAAGJ,GAAI;AAC3B;AACA;AACA,8BAA8BG,EAAG;AACjC;AACA;AACA;AACA,GAAG;EACF,OAAOC,aAAa;AACrB;AAAC,KAVeF,QAAQ;AAYxB,OAAO,SAASG,aAAa,CAACF,EAAU,EAAE;EACzC,MAAMG,QAAQ,GAAGN,GAAI;AACtB,8BAA8BG,EAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAEF,OAAOG,QAAQ;AAChB;AAAC,MAfeD,aAAa;AAiB7B,OAAO,MAAME,aAAa,GAAGP,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAGR,GAAI;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMS,KAAK,GAAGT,GAAI;AACzB;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMU,MAAM,GAAGV,GAAI;AAC1B;AACA;AACA;AACA,CAAC;AACD;EACC;AACD;AACA;AACA;AACA;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}