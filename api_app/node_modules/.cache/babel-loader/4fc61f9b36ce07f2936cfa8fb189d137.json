{"ast":null,"code":"const {\n  sendPayload\n} = require(\"./send-payload\");\nconst {\n  generateFieldsToMaskMap\n} = require(\"../maskFields\");\nconst moduleWorkerTreblle = function (_ref) {\n  let {\n    apiKey,\n    projectId,\n    additionalFieldsToMask = [],\n    showErrors = true\n  } = _ref;\n  const fieldsToMaskMap = generateFieldsToMaskMap(additionalFieldsToMask);\n  return fetch => {\n    return async (request, env, context) => {\n      let response = null;\n      let error = null;\n      let requestClone;\n      const requestStartTime = Date.now();\n      try {\n        requestClone = request.clone();\n      } catch (err) {\n        console.error(\"Error in Treblle middleware while cloning request\", err);\n      }\n      try {\n        response = await fetch(request, env, context);\n      } catch (err) {\n        error = err;\n      }\n      const requestEndTime = Date.now();\n      try {\n        await sendPayload(requestClone, response ? response.clone() : null, {\n          apiKey,\n          projectId,\n          fieldsToMaskMap,\n          showErrors,\n          requestExecutionTime: requestEndTime - requestStartTime,\n          error\n        });\n      } catch (err) {\n        // Just catch and log Treblle error - we do not want to crash app on Treblle's failure\n        console.error(\"Error occurred when sending payload to Treblle, have you set appropriate headers for your content type?\", err);\n      }\n      if (error) {\n        // Rethrow application errors\n        throw error;\n      }\n      return response;\n    };\n  };\n};\nmodule.exports = {\n  moduleWorkerTreblle\n};","map":{"version":3,"names":["sendPayload","require","generateFieldsToMaskMap","moduleWorkerTreblle","apiKey","projectId","additionalFieldsToMask","showErrors","fieldsToMaskMap","fetch","request","env","context","response","error","requestClone","requestStartTime","Date","now","clone","err","console","requestEndTime","requestExecutionTime","module","exports"],"sources":["A:/Work/PersonalDevelopment/03 {React API}/api_app/node_modules/treblle/src/cloudflare-workers/module-worker-treblle.js"],"sourcesContent":["const { sendPayload } = require(\"./send-payload\");\nconst { generateFieldsToMaskMap } = require(\"../maskFields\");\n\nconst moduleWorkerTreblle = function ({\n  apiKey,\n  projectId,\n  additionalFieldsToMask = [],\n  showErrors = true,\n}) {\n  const fieldsToMaskMap = generateFieldsToMaskMap(additionalFieldsToMask);\n  return (fetch) => {\n    return async (request, env, context) => {\n      let response = null;\n      let error = null;\n      let requestClone;\n      const requestStartTime = Date.now();\n      try {\n        requestClone = request.clone();\n      } catch (err) {\n        console.error(\"Error in Treblle middleware while cloning request\", err);\n      }\n      try {\n        response = await fetch(request, env, context);\n      } catch (err) {\n        error = err;\n      }\n      const requestEndTime = Date.now();\n      try {\n        await sendPayload(requestClone, response ? response.clone() : null, {\n          apiKey,\n          projectId,\n          fieldsToMaskMap,\n          showErrors,\n          requestExecutionTime: requestEndTime - requestStartTime,\n          error,\n        });\n      } catch (err) {\n        // Just catch and log Treblle error - we do not want to crash app on Treblle's failure\n        console.error(\n          \"Error occurred when sending payload to Treblle, have you set appropriate headers for your content type?\",\n          err\n        );\n      }\n\n      if (error) {\n        // Rethrow application errors\n        throw error;\n      }\n      return response;\n    };\n  };\n};\n\nmodule.exports = {\n  moduleWorkerTreblle,\n};\n"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACjD,MAAM;EAAEC;AAAwB,CAAC,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE5D,MAAME,mBAAmB,GAAG,gBAKzB;EAAA,IALmC;IACpCC,MAAM;IACNC,SAAS;IACTC,sBAAsB,GAAG,EAAE;IAC3BC,UAAU,GAAG;EACf,CAAC;EACC,MAAMC,eAAe,GAAGN,uBAAuB,CAACI,sBAAsB,CAAC;EACvE,OAAQG,KAAK,IAAK;IAChB,OAAO,OAAOC,OAAO,EAAEC,GAAG,EAAEC,OAAO,KAAK;MACtC,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIC,KAAK,GAAG,IAAI;MAChB,IAAIC,YAAY;MAChB,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,EAAE;MACnC,IAAI;QACFH,YAAY,GAAGL,OAAO,CAACS,KAAK,EAAE;MAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACP,KAAK,CAAC,mDAAmD,EAAEM,GAAG,CAAC;MACzE;MACA,IAAI;QACFP,QAAQ,GAAG,MAAMJ,KAAK,CAACC,OAAO,EAAEC,GAAG,EAAEC,OAAO,CAAC;MAC/C,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZN,KAAK,GAAGM,GAAG;MACb;MACA,MAAME,cAAc,GAAGL,IAAI,CAACC,GAAG,EAAE;MACjC,IAAI;QACF,MAAMlB,WAAW,CAACe,YAAY,EAAEF,QAAQ,GAAGA,QAAQ,CAACM,KAAK,EAAE,GAAG,IAAI,EAAE;UAClEf,MAAM;UACNC,SAAS;UACTG,eAAe;UACfD,UAAU;UACVgB,oBAAoB,EAAED,cAAc,GAAGN,gBAAgB;UACvDF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZ;QACAC,OAAO,CAACP,KAAK,CACX,yGAAyG,EACzGM,GAAG,CACJ;MACH;MAEA,IAAIN,KAAK,EAAE;QACT;QACA,MAAMA,KAAK;MACb;MACA,OAAOD,QAAQ;IACjB,CAAC;EACH,CAAC;AACH,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAG;EACftB;AACF,CAAC"},"metadata":{},"sourceType":"script"}