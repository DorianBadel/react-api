{"ast":null,"code":"var _jsxFileName = \"A:\\\\Work\\\\PersonalDevelopment\\\\03 {React API}\\\\api_app\\\\src\\\\components\\\\FriendsSection.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { ListOfFriends } from \"../api/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendsSection(_ref) {\n  _s();\n  let {\n    ID\n  } = _ref;\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(ListOfFriends(ID));\n  console.log(data);\n  const td = new Date();\n  const today = td.getFullYear() + \"-\" + (td.getMonth() + 1) + \"-\" + td.getDate();\n  function getAge(id) {\n    //Return actual year from DB\n    const db = data.firends.find(obj => {\n      return obj.friend.ID === id;\n    });\n    const date = db.friend.date_of_birth.split(\"-\");\n    return td.getFullYear() - Number(date[0]);\n  }\n  function getYear(id) {\n    //Return actual year from DB\n    const db = data.firends.find(obj => {\n      return obj.friend.ID === id;\n    });\n    return db.friend.date_of_birth;\n  }\n  function compare(dateOne, dateTwo) {\n    const t1 = dateOne.split(\"-\");\n    const t2 = dateTwo.split(\"-\");\n    if (t2[1] > t1[1]) {\n      return true;\n    } else if (t2[1] === t1[1]) {\n      if (t2[2] >= t1[2]) return true;else return false;\n    }\n    return false;\n  }\n  function replace(passed, fr) {\n    let newDate = \"0000-0-0\";\n    const temp = fr.friend.date_of_birth.split(\"-\");\n    if (passed) {\n      newDate = td.getFullYear() + \"-\" + temp[1] + \"-\" + temp[2];\n    } else newDate = td.getFullYear() + 1 + \"-\" + temp[1] + \"-\" + temp[2];\n    const newFriend = {\n      nickname: fr.nickname,\n      friend: {\n        ID: fr.friend.ID,\n        name: fr.friend.name,\n        date_of_birth: newDate\n      }\n    };\n    return newFriend;\n  }\n  function compareWithYear(dateOne, dateTwo) {\n    const t1 = dateOne.split(\"-\");\n    const t2 = dateTwo.split(\"-\");\n    if (t2[0] > t1[0]) return true;else if (t2[0] === t1[0]) if (t2[1] > t1[1]) {\n      return true;\n    } else if (t2[1] === t1[1]) {\n      if (t2[2] >= t1[2]) return true;else return false;\n    }\n    return false;\n  }\n  function SortDates() {\n    let newDates = [];\n    if (!loading) {\n      data.friends.map(fr => {\n        newDates.push(replace(compare(today, fr.friend.date_of_birth), fr));\n      });\n      newDates.sort((a, b) => {\n        if (compareWithYear(a.friend.date_of_birth, b.friend.date_of_birth)) return -1;else return 1;\n      });\n    }\n    return newDates;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Friends ... \", today.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: [\" ERROR - \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friendBDCardContainer\",\n      children: SortDates().map(fr => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friendBDCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Name\",\n          children: fr.nickname ? fr.nickname : fr.friend.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Age\",\n            children: getAge(fr.friend.ID)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Date\",\n            children: getYear(fr.friend.ID)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 8\n        }, this)]\n      }, fr.friend.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n}\n_s(FriendsSection, \"p6oyfP/Yk4ZuNTXZyHZn/tpJfv0=\", false, function () {\n  return [useQuery];\n});\n_c = FriendsSection;\nexport default FriendsSection;\nvar _c;\n$RefreshReg$(_c, \"FriendsSection\");","map":{"version":3,"names":["useQuery","React","ListOfFriends","FriendsSection","ID","loading","data","error","console","log","td","Date","today","getFullYear","getMonth","getDate","getAge","id","db","firends","find","obj","friend","date","date_of_birth","split","Number","getYear","compare","dateOne","dateTwo","t1","t2","replace","passed","fr","newDate","temp","newFriend","nickname","name","compareWithYear","SortDates","newDates","friends","map","push","sort","a","b","toString","message"],"sources":["A:/Work/PersonalDevelopment/03 {React API}/api_app/src/components/FriendsSection.tsx"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { ListOfFriends, ThisUser } from \"../api/queries\";\r\n\r\ntype Friend = {\r\n\tnickname: string;\r\n\tfriend: {\r\n\t\tID: number;\r\n\t\tname: string;\r\n\t\tdate_of_birth: string;\r\n\t};\r\n};\r\n\r\nfunction FriendsSection({ ID }: { ID: number }) {\r\n\tconst { loading, data, error } = useQuery(ListOfFriends(ID));\r\n\tconsole.log(data);\r\n\tconst td = new Date();\r\n\tconst today =\r\n\t\ttd.getFullYear() + \"-\" + (td.getMonth() + 1) + \"-\" + td.getDate();\r\n\r\n\tfunction getAge(id: number): number {\r\n\t\t//Return actual year from DB\r\n\t\tconst db: Friend = data.firends.find((obj: Friend) => {\r\n\t\t\treturn obj.friend.ID === id;\r\n\t\t});\r\n\r\n\t\tconst date: string[] = db.friend.date_of_birth.split(\"-\");\r\n\r\n\t\treturn td.getFullYear() - Number(date[0]);\r\n\t}\r\n\r\n\tfunction getYear(id: number): string {\r\n\t\t//Return actual year from DB\r\n\t\tconst db: Friend = data.firends.find((obj: Friend) => {\r\n\t\t\treturn obj.friend.ID === id;\r\n\t\t});\r\n\r\n\t\treturn db.friend.date_of_birth;\r\n\t}\r\n\r\n\tfunction compare(dateOne: string, dateTwo: string): boolean {\r\n\t\tconst t1: string[] = dateOne.split(\"-\");\r\n\t\tconst t2: string[] = dateTwo.split(\"-\");\r\n\r\n\t\tif (t2[1] > t1[1]) {\r\n\t\t\treturn true;\r\n\t\t} else if (t2[1] === t1[1]) {\r\n\t\t\tif (t2[2] >= t1[2]) return true;\r\n\t\t\telse return false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction replace(passed: boolean, fr: Friend): Friend {\r\n\t\tlet newDate = \"0000-0-0\";\r\n\t\tconst temp: string[] = fr.friend.date_of_birth.split(\"-\");\r\n\t\tif (passed) {\r\n\t\t\tnewDate = td.getFullYear() + \"-\" + temp[1] + \"-\" + temp[2];\r\n\t\t} else newDate = td.getFullYear() + 1 + \"-\" + temp[1] + \"-\" + temp[2];\r\n\r\n\t\tconst newFriend: Friend = {\r\n\t\t\tnickname: fr.nickname,\r\n\t\t\tfriend: {\r\n\t\t\t\tID: fr.friend.ID,\r\n\t\t\t\tname: fr.friend.name,\r\n\t\t\t\tdate_of_birth: newDate,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn newFriend;\r\n\t}\r\n\r\n\tfunction compareWithYear(dateOne: string, dateTwo: string): boolean {\r\n\t\tconst t1: string[] = dateOne.split(\"-\");\r\n\t\tconst t2: string[] = dateTwo.split(\"-\");\r\n\r\n\t\tif (t2[0] > t1[0]) return true;\r\n\t\telse if (t2[0] === t1[0])\r\n\t\t\tif (t2[1] > t1[1]) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (t2[1] === t1[1]) {\r\n\t\t\t\tif (t2[2] >= t1[2]) return true;\r\n\t\t\t\telse return false;\r\n\t\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction SortDates() {\r\n\t\tlet newDates: Friend[] = [];\r\n\t\tif (!loading) {\r\n\t\t\tdata.friends.map((fr: Friend) => {\r\n\t\t\t\tnewDates.push(replace(compare(today, fr.friend.date_of_birth), fr));\r\n\t\t\t});\r\n\r\n\t\t\tnewDates.sort((a: Friend, b: Friend) => {\r\n\t\t\t\tif (compareWithYear(a.friend.date_of_birth, b.friend.date_of_birth))\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\telse return 1;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn newDates;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Friends ... {today.toString()}</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<p>loading...</p>\r\n\t\t\t) : error ? (\r\n\t\t\t\t<span className=\"error\"> ERROR - {error.message} </span>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"friendBDCardContainer\">\r\n\t\t\t\t\t{SortDates().map((fr: Friend) => (\r\n\t\t\t\t\t\t<div key={fr.friend.ID} className=\"friendBDCard\">\r\n\t\t\t\t\t\t\t<span className=\"Name\">\r\n\t\t\t\t\t\t\t\t{fr.nickname ? fr.nickname : fr.friend.name}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span className=\"Age\">{getAge(fr.friend.ID)}</span>\r\n\t\t\t\t\t\t\t\t{/*{fr.friend.date_of_birth.split(\"-\")[0]}{\" \"}*/}\r\n\t\t\t\t\t\t\t\t<span className=\"Date\">{getYear(fr.friend.ID)}</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FriendsSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}