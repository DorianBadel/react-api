{"ast":null,"code":"var _jsxFileName = \"A:\\\\Work\\\\PersonalDevelopment\\\\03 {React API}\\\\api_app\\\\src\\\\assets\\\\diceStore.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  dice: \"1d20\",\n  modifier: 0,\n  result: 0\n};\nexport const Context = /*#__PURE__*/React.createContext({\n  result: initialState,\n  setResult: () => {}\n});\nexport function DiceProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [result, setResult] = useState(initialState);\n  const value = React.useMemo(() => {\n    const rolled = rollDice(result.dice, result.modifier);\n    return {\n      result: rolled,\n      setResult\n    };\n  }, [result, setResult]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(DiceProvider, \"UIAerilbD80VJs6YJjGw6dZlpXc=\");\n_c = DiceProvider;\nexport const rollDice = function (dice) {\n  let modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const [numDice, die] = dice.split(\"d\");\n  let total = 0;\n  for (let i = 0; i < parseInt(numDice); i++) {\n    total += Math.floor(Math.random() * parseInt(die)) + 1;\n  }\n  return {\n    dice: dice,\n    modifier: modifier,\n    result: total + modifier\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"DiceProvider\");","map":{"version":3,"names":["React","useState","initialState","dice","modifier","result","Context","createContext","setResult","DiceProvider","children","value","useMemo","rolled","rollDice","numDice","die","split","total","i","parseInt","Math","floor","random"],"sources":["A:/Work/PersonalDevelopment/03 {React API}/api_app/src/assets/diceStore.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\n\r\nexport type ResultType = {\r\n\tdice: string;\r\n\tmodifier: number;\r\n\tresult: number;\r\n};\r\n\r\nconst initialState = {\r\n\tdice: \"1d20\",\r\n\tmodifier: 0,\r\n\tresult: 0,\r\n};\r\n\r\ntype DiceTContext = {\r\n\tresult: ResultType | undefined;\r\n\tsetResult: (\r\n\t\tnewVal: ResultType | ((prevVal: ResultType) => ResultType)\r\n\t) => void;\r\n};\r\n\r\nexport const Context = React.createContext<DiceTContext>({\r\n\tresult: initialState,\r\n\tsetResult: () => {},\r\n});\r\n\r\nexport function DiceProvider({ children }: { children: React.ReactNode }) {\r\n\tconst [result, setResult] = useState<ResultType>(initialState);\r\n\r\n\tconst value = React.useMemo(() => {\r\n\t\tconst rolled = rollDice(result.dice, result.modifier);\r\n\t\treturn { result: rolled, setResult };\r\n\t}, [result, setResult]);\r\n\r\n\treturn <Context.Provider value={value}>{children}</Context.Provider>;\r\n}\r\n\r\nexport const rollDice = (dice: string, modifier = 0) => {\r\n\tconst [numDice, die] = dice.split(\"d\");\r\n\r\n\tlet total = 0;\r\n\tfor (let i = 0; i < parseInt(numDice); i++) {\r\n\t\ttotal += Math.floor(Math.random() * parseInt(die)) + 1;\r\n\t}\r\n\treturn { dice: dice, modifier: modifier, result: total + modifier };\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAaC,QAAQ,QAAQ,OAAO;AAAC;AAQjD,MAAMC,YAAY,GAAG;EACpBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,CAAC;EACXC,MAAM,EAAE;AACT,CAAC;AASD,OAAO,MAAMC,OAAO,gBAAGN,KAAK,CAACO,aAAa,CAAe;EACxDF,MAAM,EAAEH,YAAY;EACpBM,SAAS,EAAE,MAAM,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,SAASC,YAAY,OAA8C;EAAA;EAAA,IAA7C;IAAEC;EAAwC,CAAC;EACvE,MAAM,CAACL,MAAM,EAAEG,SAAS,CAAC,GAAGP,QAAQ,CAAaC,YAAY,CAAC;EAE9D,MAAMS,KAAK,GAAGX,KAAK,CAACY,OAAO,CAAC,MAAM;IACjC,MAAMC,MAAM,GAAGC,QAAQ,CAACT,MAAM,CAACF,IAAI,EAAEE,MAAM,CAACD,QAAQ,CAAC;IACrD,OAAO;MAAEC,MAAM,EAAEQ,MAAM;MAAEL;IAAU,CAAC;EACrC,CAAC,EAAE,CAACH,MAAM,EAAEG,SAAS,CAAC,CAAC;EAEvB,oBAAO,QAAC,OAAO,CAAC,QAAQ;IAAC,KAAK,EAAEG,KAAM;IAAA,UAAED;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAoB;AACrE;AAAC,GATeD,YAAY;AAAA,KAAZA,YAAY;AAW5B,OAAO,MAAMK,QAAQ,GAAG,UAACX,IAAY,EAAmB;EAAA,IAAjBC,QAAQ,uEAAG,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,GAAG,CAAC,GAAGb,IAAI,CAACc,KAAK,CAAC,GAAG,CAAC;EAEtC,IAAIC,KAAK,GAAG,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,QAAQ,CAACL,OAAO,CAAC,EAAEI,CAAC,EAAE,EAAE;IAC3CD,KAAK,IAAIG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,QAAQ,CAACJ,GAAG,CAAC,CAAC,GAAG,CAAC;EACvD;EACA,OAAO;IAAEb,IAAI,EAAEA,IAAI;IAAEC,QAAQ,EAAEA,QAAQ;IAAEC,MAAM,EAAEa,KAAK,GAAGd;EAAS,CAAC;AACpE,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}